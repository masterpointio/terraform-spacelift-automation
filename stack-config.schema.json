{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://json.schemastore.org/masterpoint-spacelift-automation-stack-config.json",
  "$vocabulary": {
    "https://json-schema.org/draft/2020-12/vocab/core": true,
    "https://json-schema.org/draft/2020-12/vocab/applicator": true,
    "https://json-schema.org/draft/2020-12/vocab/validation": true
  },
  "title": "Masterpoint Stack Config schema. Version 1.0. https://masterpoint.io",
  "description": "Schema for Masterpoint's spacelift-automation stack configuration files. This is used to override stack configurations for the https://github.com/masterpointio/terraform-spacelift-automation module.",
  "type": "object",
  "required": [],
  "properties": {
    "kind": {
      "type": "string",
      "enum": ["StackConfigV1"],
      "description": "The type of configuration file"
    },
    "automation_settings": {
      "type": "object",
      "description": "Settings that control the automation behavior of the stack",
      "properties": {
        "default_tf_workspace_enabled": {
          "type": "boolean",
          "description": "Whether to use the default terraform workspace"
        },
        "tfvars_enabled": {
          "type": "boolean",
          "description": "Whether to enable tfvars file loading"
        }
      }
    },
    "stack_settings": {
      "type": "object",
      "description": "Core stack settings, these overwrite the defaults set in the spacelift-automation module",
      "properties": {
        "administrative": {
          "type": "boolean",
          "description": "Whether the stack is administrative"
        },
        "additional_project_globs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional file patterns to trigger stack operations"
        },
        "after_apply": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after apply"
        },
        "after_destroy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after destroy"
        },
        "after_init": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after init"
        },
        "after_perform": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after perform"
        },
        "after_plan": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after plan"
        },
        "after_run": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run after run (aka `finally` hook)."
        },
        "autodeploy": {
          "type": "boolean",
          "description": "Whether to automatically deploy changes"
        },
        "autoretry": {
          "type": "boolean",
          "description": "Whether to automatically retry failed runs"
        },
        "before_apply": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run before apply"
        },
        "before_destroy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run before destroy"
        },
        "before_init": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run before init"
        },
        "before_perform": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run before perform"
        },
        "before_plan": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands to run before plan"
        },
        "branch": {
          "type": "string",
          "description": "Git branch to track"
        },
        "description": {
          "type": "string",
          "description": "Stack description"
        },
        "enable_local_preview": {
          "type": "boolean",
          "description": "Whether to enable local preview"
        },
        "enable_well_known_secret_masking": {
          "type": "boolean",
          "description": "Whether to enable masking of well-known secrets"
        },
        "github_action_deploy": {
          "type": "boolean",
          "description": "Whether to enable GitHub Action deployment"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Custom labels for the stack, these merge with the default labels set in the spacelift-automation module"
        },
        "manage_state": {
          "type": "boolean",
          "description": "Whether Spacelift should manage the state"
        },
        "project_root": {
          "type": "string",
          "description": "Root directory of the project"
        },
        "protect_from_deletion": {
          "type": "boolean",
          "description": "Whether to protect the stack from deletion"
        },
        "repository": {
          "type": "string",
          "description": "Git repository URL"
        },
        "runner_image": {
          "type": "string",
          "description": "Docker image for the runner"
        },
        "space_id": {
          "type": "string",
          "description": "Spacelift space ID"
        },
        "space_name": {
          "type": "string",
          "description": "Spacelift space name, this will be translated to a space_id. Mutually exclusive with space_id"
        },
        "terraform_smart_sanitization": {
          "type": "boolean",
          "description": "Whether to enable smart sanitization"
        },
        "terraform_version": {
          "type": ["string", "null"],
          "description": "OpenTofu/Terraform version to use. Defaults to the latest available version."
        },
        "worker_pool_id": {
          "type": "string",
          "description": "Worker pool ID"
        },
        "aws_integration_enabled": {
          "type": "boolean",
          "description": "Whether to enable AWS integration"
        },
        "aws_integration_id": {
          "type": "string",
          "description": "AWS integration ID"
        },
        "drift_detection_enabled": {
          "type": "boolean",
          "description": "Whether to enable drift detection"
        },
        "drift_detection_ignore_state": {
          "type": "boolean",
          "description": "Whether to ignore state in drift detection"
        },
        "drift_detection_reconcile": {
          "type": "boolean",
          "description": "Whether to reconcile drift automatically"
        },
        "drift_detection_schedule": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^([0-9,\\-\\*]+\\s+){4}[0-9,\\-\\*]+$"
          },
          "description": "Cron schedule for drift detection"
        },
        "drift_detection_timezone": {
          "type": "string",
          "description": "Timezone for drift detection schedule"
        },
        "destructor_enabled": {
          "type": "boolean",
          "description": "Whether to enable the stack destructor"
        },
        "destructor_deactivated": {
          "type": "boolean",
          "description": "Whether to deactivate the stack destructor when enabled"
        }
      }
    }
  }
}
